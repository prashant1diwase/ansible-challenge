---
- name: Provisioning EC2 instances
  block:
  # Create a check if instance exists
  - name: Get all EC2 Instances
    ec2_instance_info:
      filters:
        "tag:html": html_pages
        instance-state-name : running
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
    register: ec2_facts

  - name: Initialize an empty list for server exists
    set_fact:
      server_exist: []

  - name: Set server to list if it exists
    set_fact:
      server_exist: "{{ server_exist + [ item.tags.Name ] }}"
    when: html_pages[item.tags.Name] is defined
    with_items: "{{ ec2_facts.instances }}"

  - name: Upload public key to AWS
    ec2_key:
      name: "{{ key_name }}"
      key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"

  - name: Create security group
    ec2_group:
      name: "{{ sec_group }}"
      description: "Sec group for app {{ id }}"
      # vpc_id: 12345
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: tcp
          ports:
            - 22
            - 80
            - 443
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on ssh port
    register: result_sec_group

  - name: Provision instance(s)
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      key_name: "{{ key_name }}"
      id: "{{ id }}"
      group_id: "{{ result_sec_group.group_id }}"
      image: "{{ image }}"
      instance_type: "{{ instance_type }}"
      region: "{{ region }}"
      wait: true
      #count: 1
      exact_count: 1
      count_tag:
        Name: App
      instance_tags:
        Name: "{{ item.key }}"
        html: html_pages
    when: item.key not in server_exist
    with_dict: "{{ html_pages }}"
    notify: Sleep

- name: Refresh inventory
  meta: refresh_inventory